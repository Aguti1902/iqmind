import { create } from 'zustand'
import { persist } from 'zustand/middleware'

type Locale = 'es' | 'en' | 'fr' | 'de' | 'it' | 'pt' | 'sv' | 'no'

interface I18nStore {
  locale: Locale
  setLocale: (locale: Locale) => void
}

export const useI18n = create<I18nStore>()(
  persist(
    (set) => ({
      locale: 'es',
      setLocale: (locale) => set({ locale }),
    }),
    {
      name: 'iqmind-locale',
    }
  )
)

export const languages = {
  es: { name: 'EspaÃ±ol', flag: 'ğŸ‡ªğŸ‡¸' },
  en: { name: 'English', flag: 'ğŸ‡¬ğŸ‡§' },
  fr: { name: 'FranÃ§ais', flag: 'ğŸ‡«ğŸ‡·' },
  de: { name: 'Deutsch', flag: 'ğŸ‡©ğŸ‡ª' },
  it: { name: 'Italiano', flag: 'ğŸ‡®ğŸ‡¹' },
  pt: { name: 'PortuguÃªs', flag: 'ğŸ‡µğŸ‡¹' },
  sv: { name: 'Svenska', flag: 'ğŸ‡¸ğŸ‡ª' },
  no: { name: 'Norsk', flag: 'ğŸ‡³ğŸ‡´' },
}

export async function getTranslations(locale: Locale) {
  try {
    const messages = await import(`@/messages/${locale}.json`)
    return messages.default
  } catch (error) {
    // Fallback to Spanish if translation not found
    const messages = await import(`@/messages/es.json`)
    return messages.default
  }
}

